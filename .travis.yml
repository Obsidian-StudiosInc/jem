language: c
compiler: gcc
sudo: required
dist: trusty
env:
  matrix:
    - MY_PV=0.2.2

install:
  - sudo apt-get -qq update
  - sudo apt-get install -y openjdk-7-jdk cmake rpm libc6-dbg ninja
  - wget https://launchpad.net/ubuntu/+source/valgrind/1:3.13.0-1ubuntu3/+build/13618072/+files/valgrind_3.13.0-1ubuntu3_amd64.deb
  - wget https://launchpad.net/ubuntu/+source/shellcheck/0.4.6-1/+build/13053646/+files/shellcheck_0.4.6-1_amd64.deb
  - sudo dpkg -i *.deb
  - pushd samples
  - sudo cp -r etc usr /
  - cd dpkg
  - sudo cp -r etc /
  - popd

jobs:
  include:
    - stage: Test build
      deploy:
        provider: releases
        api_key:
          secure: p/dWgK6qv942D3u/DQ6tLoEd1Qv/xKQ79oiacEsoA60LUcmNxcO9Ls62KBmJ/W1PwFZFsepijZvuvb3XPhRVSd0pXXete5vkG9fmZ+cJe+5w28KgLN2gRWvToiVkZ98atKCGkh4IqKc07y+gk632bGBfPNsqGZD/FOhV5GLIbopvuN+vK3BWXJB/XZeKrBt43odM4DrSTLXi6drkO1stHk5lqMo07Sa6VtF3Zml6Lxy7eFz5rRXAQH32KoiNKObyNS3k8PgofJ2o1hFpcGLCmDDRFqLH2bSQ2QW3xPyoHN+pYeQBe8n0Trnin9wvHcUIIJyubwXThguSI0wHha6ZZMSL6Cin9C2i9t8COfWHpHUGWdJ98rum46iRTffD6lG3hA+ACfHO4CDcuP8ezWzhYCX8Bwkztd5XYDJ5fBC6HzElyFUAyoyu97R4LUgxLn1KXM6WoTaMTwGgQNL8ZtnypJeDzSefZNzIIayZJMCDyqPJwVEKibntvrKtHeJUpS/sKh4nL53eQiMzXgvjlu9nZer1nOx9GXrBgzdtRkjSmmbpQI50VUnwhHf7mnVVDBJ5QsuG3V5m0n2Ft6W5T3wOexgvhfdzewVpMbMhmPlGF1eiKsKapGkTtnNs6vYlc6ThtRJfSUKX4fgr7EIGeSIg/XgBTy7yjtu3IlZj4w7IGjk=
        file:
          - dist/jem-${MY_PV}.x86_64.deb
          - dist/jem-${MY_PV}.x86_64.rpm
        on:
          repo: Obsidian-StudiosInc/jem
          branch: master
          tags: true
        skip_cleanup: true
    - stage: SonarQube Scan
      cache:
        directories:
          - $HOME/.sonar/cache
      addons:
        sonarcloud:
          organization: obsidian-studiosinc-github
          token:
            secure: MUdFKjOdltZ5t2rRBRaXavZmUsO90rY2KcW2d+900d3Ybw/VwIVc4wJr8kovuWX3L6pHLRiOq774iQjnvaGFfZ2o8dpS1ozxfpQo4NGw7HB4/qhRP74uqIrcO2YBOHuMu8MKsha6WXOLlFPcvVtA4pmiHW96iB2/PTah9n6vwYtQ/WOj5W3LN/TKQARGVTa82t84gCUXs0fbtTQSZNpoP9BWZjjunJD9mTrexQ4oJrTEdZNZV4bnOfMn6i9EJcaFR4hbGRIAjE51hdKDMHrqzdog/yryYPSoCdFHlKvrhTo8xNBsrHYPXTTbOgZ/TcO/JmzIuljWuMmCsoGDAuSu+W3vFqK5sglra+60/apoG1PHX2LpWgujDSbTqockNwEcTpZpu98CNjjlp9lkXfKi9IRz0EjumhGzVmTUUm92Uh8QDJ/CAu8yABXiq8dBi+IerqjtK1IWqRC4OsBUPv+S9ElxWRuhZvT4F4v5XCtWt+U6YvFozW9YC2S4tB0tu4yrhtm8ZOH1ke4rW/cfhD5PKiCjUEv9YBEh3uRUsE2HVVBV9ibOVg9cRVJK37ryei22sskRnReP4laBUxHUeKGBVVZpGzzoptDwzlLRDyPTL9LNU39jd7lbXjdDSvGfsb1SQENiAO43qDXfxD8ctU8zjmgRL9kQaYYkDO0tvdWLavs=
      script:
        - sudo cmake -D CMAKE_BUILD_TYPE=Test -G Ninja ./
        - build-wrapper-linux-x86-64 --out-dir bw-output ninja
        - 'find . -name ''*.gcno'' -exec sh -c ''gcov {} -o $(dirname {})'' \;'
        - sonar-scanner
    - stage: Coverity Scan
      env:
        - secure: F0lXt9unZtjohT5NUZc4Zom9sUkXkIoQtOwVlDV2k0BFQJndmj+BqWucJZGxQomyujXlqgWukoEtWAVVb3L9zaetcymcsPNN18OYNjhO5updDnuq4UcKTyJ5ianothw3ApqVwR2GjEoLxSDMczpM7PsV70VYxWD9H1zo2mAJc15Q0Jq71J/uLDp2XIkVYWDSuK1nR/ehx/URs0MHu5cIJsAy02wzGAtpkrRn/HyPSmmBR3iSqZmrz0xfafIQcFVWKIVz/Tdu/taBI0272y9E2rUTwg5hUyCnyNJHYr+eRuPX/giCm7Yhun0NROIlNNdkVyzrqajVctoybNINJz1eKBFPyBcVHtBL8cMp83lWpAdpyvAc9Ehr/AeWzcs+VRxBer++dUV5p2EyyGX+h+C5B+kf0YvDyGhzn3OHRty+AUumiBdQgq+DsplySQLKQEMFq5RhzeVsj7JKodKbAWazadnWjG+fpadPkdFnADn+nJ5raD0cq157nVijHHNOMnBpBNciStqYeDdbaPeCeT8d5Ikj1mPPHvvSqiOJDE69diwspJMrhyg8lbBsGJUP9s8rKqJTMoaUDVYHmqI9vqBwmRu6a40BBMcPO2pcBE6ePbCyGp7jIKEUhA0PO+yKkVq2MWUONb9F6nfyG7Sa1tnn4xjX0UyaMgyoOcgvNIz4vZA=
      before_install:
         - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
      addons:
        coverity_scan:
          project:
            name: "Obsidian-StudiosInc/jem"
            description: "Build submitted via Travis CI"
          notification_email: wlt@o-sinc.com
          build_command_prepend: "cmake -D CMAKE_BUILD_TYPE=Debug ./"
          build_command: "make -j 4"
          branch_pattern: master
      script:
        - true // avoid coverity double build

script:
  - sudo cmake -D CMAKE_BUILD_TYPE=Debug -D BUILD_DOC=ON -G Ninja ./
  - ninja package
  - ninja jem-test
  - sudo dpkg -i --force-all dist/jem-*.x86_64.deb
  - shellcheck data/run-java-tool.bash
  - shellcheck tests/run-tests.sh
  - sudo ./tests/run-tests.sh -j

notifications:
  email: false
