language: c
compiler: gcc
sudo: required
dist: focal
env:
  global:
    - MY_PV=0.2.8

install:
  - sudo apt-get -qq update
  - sudo apt-get install -y cmake rpm libc6-dbg openjdk-11-jdk-headless musl-tools shellcheck valgrind
  - if [ ! "${SHIPPABLE}" ]; then wget https://github.com/Obsidian-StudiosInc/travis-ci-musl-argp/releases/download/1/argp-standalone_1.3-1_amd64.deb ; fi
  - if [ ! "${SHIPPABLE}" ]; then sudo dpkg -i *.deb ; fi
  - pushd samples
  - sudo cp -r etc usr /
  - cd dpkg
  - sudo cp -r etc /
  - popd

jobs:
  include:
    - stage: Test build
#    - stage: Test build musl
#      env:
#        - CC="musl-gcc"
#        - OPTS=-DHAVE_MUSL=ON
    - stage: SonarQube Scan
      env:
        - SONAR="build-wrapper-linux-x86-64 --out-dir bw-output"
      cache:
        directories:
          - $HOME/.sonar/cache
      addons:
        sonarcloud:
          organization: obsidian-studiosinc-github
          token:
            secure: MUdFKjOdltZ5t2rRBRaXavZmUsO90rY2KcW2d+900d3Ybw/VwIVc4wJr8kovuWX3L6pHLRiOq774iQjnvaGFfZ2o8dpS1ozxfpQo4NGw7HB4/qhRP74uqIrcO2YBOHuMu8MKsha6WXOLlFPcvVtA4pmiHW96iB2/PTah9n6vwYtQ/WOj5W3LN/TKQARGVTa82t84gCUXs0fbtTQSZNpoP9BWZjjunJD9mTrexQ4oJrTEdZNZV4bnOfMn6i9EJcaFR4hbGRIAjE51hdKDMHrqzdog/yryYPSoCdFHlKvrhTo8xNBsrHYPXTTbOgZ/TcO/JmzIuljWuMmCsoGDAuSu+W3vFqK5sglra+60/apoG1PHX2LpWgujDSbTqockNwEcTpZpu98CNjjlp9lkXfKi9IRz0EjumhGzVmTUUm92Uh8QDJ/CAu8yABXiq8dBi+IerqjtK1IWqRC4OsBUPv+S9ElxWRuhZvT4F4v5XCtWt+U6YvFozW9YC2S4tB0tu4yrhtm8ZOH1ke4rW/cfhD5PKiCjUEv9YBEh3uRUsE2HVVBV9ibOVg9cRVJK37ryei22sskRnReP4laBUxHUeKGBVVZpGzzoptDwzlLRDyPTL9LNU39jd7lbXjdDSvGfsb1SQENiAO43qDXfxD8ctU8zjmgRL9kQaYYkDO0tvdWLavs=
    - stage: Deploy
      if: tag =~ ^v.*
      deploy:
        provider: releases
        api_key:
          secure: LpyDRXZYYXPt3qFHwrljEaqFwqV+vmtGRAMImkYCP2m7BHDPLBnP0qFu8FwcZ0zb5dS2onIRmr9Gguio08ACpfY7fEJXlNCaRZ2dLAj/4oS3x4PM0ZpFprod1EeF6KHcqB7qJtQzN+iX6nk8Cfs/iIIS8u4i/TGUOlIcgBFQ/IFKVkYVSlcxn1CKe0wJh7/eNH+g+7OpIiNUbBreN1eYKV7zTCe1qLiaH9WifGgyOyghflEBgZdp9YZX6m0DFln1ZXOG3abLqtsUrBioCjmlWxP/wZPRtiemvfG9X5C/wgDistdNE2KMCeZLx80MN3XPaQ3/OMwZi7luCjGbLGVYKzIN9Ofz/pV249757C6ppPV0SCSaF9qFkRQGgktwMqA/+acwtL0c2x5D/XRQp+SBF9J80gAkVCzK0y+q/x4mRDRIUUp+943OX5yIjcLQQqTgoXxrcNR6fTCXm0lFCGkxYIaKKa/1pJ4LzYb0/hIAmbRWDQdf8fFena97/E757Nq2C+Ci42FymSktFOZjP6plON4wg5C2ZWR8PjyLCyF99k3Feq/TqSikbuTVuMmsOYqm/EixFgsgpVpQsXjW4OpfavmRu68W2oNvUAUHdPbKCpx+352doqIT0T6eOV0mVqdOZE7yfh6iqhBwRl06TrbCEeJp3ay7ko0TbfjlWIRgLF8=
        file:
          - dist/jem-${MY_PV}.x86_64.deb
          - dist/jem-${MY_PV}.x86_64.rpm
        on:
          repo: Obsidian-StudiosInc/jem
          branch: master
          tags: true
        skip_cleanup: true
      script:
        - cmake -D CMAKE_BUILD_TYPE=Release -D BUILD_DOC=ON ./
        - make package
    - stage: Coverity Scan
      env:
        - secure: F0lXt9unZtjohT5NUZc4Zom9sUkXkIoQtOwVlDV2k0BFQJndmj+BqWucJZGxQomyujXlqgWukoEtWAVVb3L9zaetcymcsPNN18OYNjhO5updDnuq4UcKTyJ5ianothw3ApqVwR2GjEoLxSDMczpM7PsV70VYxWD9H1zo2mAJc15Q0Jq71J/uLDp2XIkVYWDSuK1nR/ehx/URs0MHu5cIJsAy02wzGAtpkrRn/HyPSmmBR3iSqZmrz0xfafIQcFVWKIVz/Tdu/taBI0272y9E2rUTwg5hUyCnyNJHYr+eRuPX/giCm7Yhun0NROIlNNdkVyzrqajVctoybNINJz1eKBFPyBcVHtBL8cMp83lWpAdpyvAc9Ehr/AeWzcs+VRxBer++dUV5p2EyyGX+h+C5B+kf0YvDyGhzn3OHRty+AUumiBdQgq+DsplySQLKQEMFq5RhzeVsj7JKodKbAWazadnWjG+fpadPkdFnADn+nJ5raD0cq157nVijHHNOMnBpBNciStqYeDdbaPeCeT8d5Ikj1mPPHvvSqiOJDE69diwspJMrhyg8lbBsGJUP9s8rKqJTMoaUDVYHmqI9vqBwmRu6a40BBMcPO2pcBE6ePbCyGp7jIKEUhA0PO+yKkVq2MWUONb9F6nfyG7Sa1tnn4xjX0UyaMgyoOcgvNIz4vZA=
      before_install:
         - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
      addons:
        coverity_scan:
          project:
            name: "Obsidian-StudiosInc/jem"
            description: "Build submitted via Travis CI"
          notification_email: wlt@o-sinc.com
          build_command_prepend: "cmake -D CMAKE_BUILD_TYPE=Debug ./"
          build_command: "make -j 4"
          branch_pattern: master
      script:
        - true // avoid coverity double build

script:
  - cmake -D CMAKE_BUILD_TYPE=Debug -D BUILD_DOC=ON ${OPTS} ./
  - ${SONAR} make package jem-test
  - sudo dpkg -i --force-all dist/jem-*.x86_64.deb
  - shellcheck data/run-java-tool.bash
  - shellcheck tests/run-tests.sh
  - ./tests/run-tests.sh openjdk-11 /usr/lib/jvm/java-11-openjdk-amd64 samples/dpkg/etc/jem/vms.d/openjdk-11 samples/usr/share/ant-core/package.env
  - if [ "${SONAR}" ]; then find . -name '*.gcno' -exec sh -c 'gcov -b {} -o $(dirname {})' \;; fi
  - if [ "${SONAR}" ]; then sonar-scanner; fi

notifications:
  email: false
